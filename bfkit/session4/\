/**************************************************************************
pass.S: audio passthrough example using codec.o

Compilation: bfin-elf-gcc -c -I ../include pass.S
Linking:     bfin-elf-ld -T ../include/bfkit.ldf -o pass.x pass.o codec.o

(C) 2008, ISI/ETH Zurich, bolliger@isi.ee.ethz.ch
**************************************************************************/

#include    <defBF532.h>             // includes also "def_LPBlackfin.h"
#define	KEYHIT	50000

.text

init:       [--SP] = RETS;           // push RETS to allow nested calls
            JUMP main;               // jump to main program

main:       R0 = 0 (Z);              // initialize codec using mic in
            CALL inicodec;
  

mloop:      CALL push_music;
	    	CALL rxsport;
		CALL txsport;
		CALL rxsport;
		CALL txsport;
		//CALL keycka;
	    //IF CC JUMP mute_left;
key_a:
	    //CALL keyckb;
	    //IF CC JUMP mute_right;
key_b:
    	    JUMP mloop;              // loop forever




push_music:
		CALL rxsport;
		CALL txsport;
		CALL rxsport;
		CALL txsport;
		RTS;


mute_left:
		R0.L = 0x0097;
	    	CALL trspi;
		
	loop1:
		CALL keycka;
		CALL push_music;
		IF CC JUMP loop1;
		R0.L = 0x0017;
		CALL trspi;
		JUMP key_a; 

mute_right:
	    	R0.L = 0x0297;
	    	CALL trspi;

	loop2:
		CALL keyckb;
		CALL push_music;
		IF CC JUMP loop2;
		R0.L = 0x0217;
		CALL trspi;
		JUMP key_b;


keycka:
	    [--SP] = (R7:3, P5:4);
            R6.H = HI(KEYHIT);
            R6.L = LO(KEYHIT);       // R6 = KEYHIT
	    R4 = 0(Z);

            P4.H = HI(FIO_FLAG_D);
            P4.L = LO(FIO_FLAG_D);
            R5 = W[P4](Z);
            
	    c_loop:
	    
	    CC = !BITTST(R5,7);      // CC = Is key A pressed?
            IF !CC JUMP l_exit;      // if key A pressed: jump

	    R4 += 0x1;
	    


	    R7 = 0(Z);
	    R3 = 0xD(Z);

	    w_loop1:
	    R7 += 0x1;

	    CC = R3 <= R7;
	    IF !CC JUMP w_loop1;



	    CC = R6 <= R4;
	    IF CC JUMP l_exit;
	    JUMP c_loop;

	    l_exit:
            (R7:3, P5:4) = [SP++];
            RTS;

keyckb:
	    [--SP] = (R7:3, P5:4);
            R6.H = HI(KEYHIT);
            R6.L = LO(KEYHIT);       // R6 = KEYHIT
	    R4 = 0(Z);

            P4.H = HI(FIO_FLAG_D);
            P4.L = LO(FIO_FLAG_D);
            R5 = W[P4](Z);
            
	    c1_loop:
	    
	    CC = !BITTST(R5,6);      // CC = Is key A pressed?
            IF !CC JUMP l1_exit;      // if key A pressed: jump

	    R4 += 0x1;
	    


	    R7 = 0(Z);
	    R3 = 0xD(Z);

	    w1_loop1:
	    R7 += 0x1;

	    CC = R3 <= R7;
	    IF !CC JUMP w1_loop1;



	    CC = R6 <= R4;
	    IF CC JUMP l1_exit;
	    JUMP c1_loop;

	    l1_exit:
            (R7:3, P5:4) = [SP++];
            RTS;

